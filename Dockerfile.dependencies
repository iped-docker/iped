# FROM nvidia/cuda:11.7.1-cudnn8-runtime-ubuntu22.04
FROM ubuntu:22.04

ARG PKGTMPDIR=/tmp/pkgs

ENV TZ=Brazil/East DEBIAN_FRONTEND=noninteractive LANG=C.UTF-8 LC_ALL=C.UTF-8 SAL_USE_VCLPLUGIN='gtk' \
    JAVA_HOME=/usr/lib/jvm/bellsoft-java11-full-amd64/ LD_LIBRARY_PATH=/usr/local/lib/python3.9/dist-packages/jep/

RUN mkdir -p ${PKGTMPDIR} && cd ${PKGTMPDIR} \
    && apt-get update && apt-get install -y wget gnupg apt-utils apt-transport-https software-properties-common \
    && apt-get dist-upgrade -y \
    && add-apt-repository ppa:deadsnakes/ppa \
    && wget -q -O - https://download.bell-sw.com/pki/GPG-KEY-bellsoft | tee /etc/apt/trusted.gpg.d/bellsoft.asc \
    && echo "deb [arch=amd64] https://apt.bell-sw.com/ stable main" | tee /etc/apt/sources.list.d/bellsoft.list \
    && apt-get update \    
    && apt-get install -y \
            git \
            build-essential autoconf automake autopoint libtool pkg-config yasm gettext flex byacc ant ant-optional \
            zlib1g-dev libncurses5-dev libcurl4-openssl-dev libexpat1-dev libreadline-dev \
            wget unzip patch \
            libaa1-dev libasound2-dev libcaca-dev libcdparanoia-dev libdca-dev \
            libdirectfb-dev libenca-dev libfontconfig1-dev libfreetype6-dev \
            libfribidi-dev libgif-dev libgl1-mesa-dev libjack-jackd2-dev libopenal1 libpulse-dev \
            libsdl1.2-dev libvdpau-dev libxinerama-dev libxv-dev libxvmc-dev libxxf86dga-dev \
            libxxf86vm-dev librtmp-dev libsctp-dev libass-dev libfaac-dev libsmbclient-dev libtheora-dev \
            libogg-dev libxvidcore-dev libspeex-dev libvpx-dev libdv4-dev \
            libopencore-amrnb-dev libopencore-amrwb-dev libmp3lame-dev libtwolame-dev \
            libmad0-dev libgsm1-dev libbs2b-dev liblzo2-dev ladspa-sdk libfaad-dev \
            libmpg123-dev libopus-dev libbluray-dev libaacs-dev \
            libjpeg-dev \
            libtiff-dev \
            libpng-dev \
            libwmf-dev \
            libgif-dev \
            libheif-dev \
            libwebp-dev \
            librsvg2-dev \
            libopenexr-dev \
            libatomic1 \
            vim \
            less\
            libparse-win32registry-perl \
            tesseract-ocr tesseract-ocr-osd tesseract-ocr-por tesseract-ocr-eng tesseract-ocr-deu tesseract-ocr-frk tesseract-ocr-ita \
            graphviz \  
            bellsoft-java11-full \
            mplayer \
            rifiuti2 \
            python3.9 python3.9-distutils python3-pip python3.9-dev \
            sudo \ 
    && echo "#####################################" \
    && echo " Installing LIBSSL v1.1 to be used with sleuthkit IPED patch" \
    && echo "#####################################" \
    && echo "deb http://security.ubuntu.com/ubuntu focal-security main" | tee /etc/apt/sources.list.d/focal-security.list \
    && apt-get update \
    && apt-get install -y libssl-dev=1.1.1f-1ubuntu2.22 \
    && rm /etc/apt/sources.list.d/focal-security.list && apt-get update \
    && echo "#####################################" \
    && echo "install libbfio" \
    && echo "#####################################" \
    && cd ${PKGTMPDIR} \
    && git clone -b 20221025 https://github.com/libyal/libbfio \
    && cd ${PKGTMPDIR}/libbfio \ 
    && ./synclibs.sh \
    && ./autogen.sh \
    && ./configure --prefix=/usr \
    && make all install \
    && rm -rf ${PKGTMPDIR}/libbfio \
    && echo "#####################################" \
    && echo "install libvslvm - removed branch - is currently only building on master" \
    && echo "#####################################" \
    && cd ${PKGTMPDIR} \
    && git clone https://github.com/libyal/libvslvm \
    && cd ${PKGTMPDIR}/libvslvm \ 
    && ./synclibs.sh \
    && ./autogen.sh \
    && ./configure --prefix=/usr \
    && make all install \
    && rm -rf ${PKGTMPDIR}/libvslvm \            
    && echo "#####################################" \
    && echo "install libvmdk - removed branch - is currently only building on master" \
    && echo "#####################################" \
    && cd ${PKGTMPDIR} \
    && git clone https://github.com/libyal/libvmdk \
    && cd ${PKGTMPDIR}/libvmdk \ 
    && ./synclibs.sh \
    && ./autogen.sh \
    && ./configure --prefix=/usr \
    && make all install \
    && rm -rf ${PKGTMPDIR}/libvmdk \
    && echo "#####################################" \
    && echo "install libvhdi - removed branch - is currently only building on master" \
    && echo "#####################################" \
    && cd ${PKGTMPDIR} \
    && git clone https://github.com/libyal/libvhdi \
    && cd ${PKGTMPDIR}/libvhdi \ 
    && ./synclibs.sh \
    && ./autogen.sh \
    && ./configure --prefix=/usr \
    && make all install \
    && rm -rf ${PKGTMPDIR}/libvhdi \
    && echo "#####################################" \
    && echo "install libewf" \
    && echo "#####################################" \
    && cd ${PKGTMPDIR} \
    && git clone -b 20201230 https://github.com/sepinf-inc/libewf \
    && cd ${PKGTMPDIR}/libewf \  
    && ./synclibs.sh \
    && ./autogen.sh \
    && ./configure --prefix=/usr \
    && make all install \
    && rm -rf ${PKGTMPDIR}/libewf \
    && echo "#####################################" \
    && echo "install afflib" \
    && echo "#####################################" \
    && cd ${PKGTMPDIR} \
    && git clone -b v3.7.20 https://github.com/sshock/AFFLIBv3 \
    && cd ${PKGTMPDIR}/AFFLIBv3 \ 
    && ./bootstrap.sh \
    && ./configure --prefix=/usr \
    && make all install \
    && rm -rf ${PKGTMPDIR}/AFFLIBv3 \
    && echo "#####################################################" \
    && echo " Installing Sleuthkit with IPED patch with libssl" \
    && echo "#####################################################" \
    && cd ${PKGTMPDIR} \
    && git clone -b 4.12.0_iped_patch https://github.com/sepinf-inc/sleuthkit \
    && cd ${PKGTMPDIR}/sleuthkit/ \
    && echo "Patching ewf.cpp to TSK uses libewf 20201230" \
    && echo "#####################################" \
    && curl https://raw.githubusercontent.com/iped-docker/iped/master/resources/ewf.cpp.patch --output ${PKGTMPDIR}/ewf.cpp.patch \
    && patch tsk/img/ewf.cpp < ${PKGTMPDIR}/ewf.cpp.patch \
    && echo "#####################################" \
    && ./bootstrap \ 
    && ./configure --prefix=/usr/ \
    && make && make install \
    && rm -rf ${PKGTMPDIR}/sleuthkit/ \
    && echo "#####################################" \
    && echo "The libagdb only have branch master" \
    && echo "#####################################" \
    && cd ${PKGTMPDIR} \
    && git clone https://github.com/libyal/libagdb.git \
    && cd ${PKGTMPDIR}/libagdb \
    && ./synclibs.sh \
    && ./autogen.sh \    
    && ./configure --prefix=/usr \ 
    && make all install \
    && rm -rf ${PKGTMPDIR}/libagdb \
    && echo "#####################################" \
    && echo "install libevtx - master is th only working branch" \
    && echo "#####################################" \
    && cd ${PKGTMPDIR} \
    && git clone https://github.com/libyal/libevtx \
    && cd ${PKGTMPDIR}/libevtx \ 
    && ./synclibs.sh \
    && ./autogen.sh \
    && ./configure --prefix=/usr \
    && make all install \
    && rm -rf ${PKGTMPDIR}/libevtx \
    && echo "#####################################" \
    && echo "Install libevt - master is th only working branch" \
    && echo "#####################################" \
    && cd ${PKGTMPDIR} \
    && git clone https://github.com/libyal/libevt \
    && cd ${PKGTMPDIR}/libevt \
    && ./synclibs.sh \
    && ./autogen.sh \
    && ./configure --prefix=/usr \
    && make all install \
    && rm -rf ${PKGTMPDIR}/libevt \
    && echo "#####################################" \
    && echo "Install libscca - master is th only working branch" \
    && echo "#####################################" \
    && cd ${PKGTMPDIR} \
    && git clone https://github.com/libyal/libscca \
    && cd ${PKGTMPDIR}/libscca \
    && ./synclibs.sh \
    && ./autogen.sh \
    && ./configure --prefix=/usr \
    && make all install \
    && rm -rf ${PKGTMPDIR}/libscca \
    && echo "#####################################" \
    && echo "Install libesedb - master is th only working branch" \
    && echo "#####################################" \
    && cd ${PKGTMPDIR} \
    && git clone https://github.com/libyal/libesedb \
    && cd ${PKGTMPDIR}/libesedb \
    && ./synclibs.sh \
    && ./autogen.sh \
    && ./configure --prefix=/usr \
    && make all install \
    && rm -rf ${PKGTMPDIR}/libesedb \
    && echo "#####################################" \
    && echo "Install libpff without branch also, because latest release got problems" \
    && echo "#####################################" \
    && cd ${PKGTMPDIR} \
    && git clone https://github.com/libyal/libpff \
    && cd ${PKGTMPDIR}/libpff \
    && ./synclibs.sh \
    && ./autogen.sh \
    && ./configure --prefix=/usr \ 
    && make all install \
    && rm -rf ${PKGTMPDIR}/libpff \
    && echo "#####################################" \
    && echo "Install libmsiecf - master is th only working branch" \
    && echo "#####################################" \
    && cd ${PKGTMPDIR} \
    && git clone https://github.com/libyal/libmsiecf \
    && cd ${PKGTMPDIR}/libmsiecf \
    && ./synclibs.sh \
    && ./autogen.sh \
    && ./configure --prefix=/usr \
    && make all install \
    && rm -rf ${PKGTMPDIR}/libmsiecf \
    && echo "#####################################" \
    && echo "rifiuti2 - rifiuti2 is being installed from packages due to gettext incompatibility" \
    && echo "Just creating rifiuti link" \
    && echo "#####################################" \
    #&& cd ${PKGTMPDIR} \
    #&& git clone --branch="0.7.0" https://github.com/abelcheung/rifiuti2 \
    #&& cd ${PKGTMPDIR}/rifiuti2 \
    #&& autoreconf -f -i -v \
    #&& ./configure --prefix=/usr \
    #&& make all install \
    #&& rm -rf ${PKGTMPDIR}/rifiuti2 
    && update-alternatives --install /usr/bin/rifiuti rifiuti /usr/bin/rifiuti2 1 \
    && echo "#####################################" \
    && echo "Instal ImageMagik" \
    && echo "#####################################" \
    && cd ${PKGTMPDIR} \
    && git clone --branch "7.1.1-21" https://github.com/ImageMagick/ImageMagick \
    && cd ${PKGTMPDIR}/ImageMagick \
    && ./configure --prefix=/usr \
    && make all install \
    && rm -rf ${PKGTMPDIR}/ImageMagick \
    && echo "#####################################" \
    && echo "Creating mplayer config" \
    && echo "#####################################" \
    && mplayer \
    && echo "#####################################" \
    && echo "Installing PYTHON IPED Dependencies" \
    && echo " ->> Huggingsound REMOVED from default cuda image due incompatibility of pytorch+cuda version" \
    && echo " ->> On the default container Huggingsound transcription is to be used trough transcription server" \
    && echo "#####################################" \
    && cd /root/ \
    && update-alternatives --install /usr/bin/python python /usr/bin/python3.9 1 \
    && update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.9 1 \
    && python -m pip install pip --upgrade \
    && python -m pip install cmake \
    && python -m pip install numpy \
    && python -m pip install jep==4.0.3 \
    # && python -m pip install torch==1.13.1+cu117 torchvision==0.14.1+cu117 torchaudio==0.13.1 --extra-index-url https://download.pytorch.org/whl/cu117 \
    && echo "Due to container high storage usage, Tensorflow was removed - it's only used on yahoo image detection - if you want to use it, uncomment the following line:" \
    && echo "python -m pip install tensorflow==2.9.1 tensorrt==8.5.3.1" \
    && python -m pip install keras \
                          pillow \
                          bs4 \
                          face_recognition \       
    && echo "#####################################" \
    && echo "Cleaning UP the container " \
    && echo "#####################################" \
    && apt-get remove -y python3-pip build-essential build-essential autoconf automake autopoint libtool pkg-config yasm gettext flex byacc ant ant-optional \                       
    && apt-get autoremove -y \
    && rm -rfv /root/.cache/pip && rm -rfv ${PKGTMPDIR}/* && apt-get clean && rm -rfv /var/lib/apt/lists/*

WORKDIR /
CMD ["/bin/bash"]
