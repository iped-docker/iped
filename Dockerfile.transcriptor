FROM nvidia/cuda:11.6.2-cudnn8-runtime-ubuntu20.04

ARG SNAPSHOT=true IPED_RELEASE_VERSION=4.1.4 SNAPSHOT_WORKFLOW_ID=6091785872 PKGTMPDIR=/tmp/pkgs 

ENV TZ=Brazil/East DEBIAN_FRONTEND=noninteractive LANG=C.UTF-8 LC_ALL=C.UTF-8 \
    SAL_USE_VCLPLUGIN='gtk' JAVA_HOME=/usr/lib/jvm/bellsoft-java11-runtime-amd64/ \
    LD_LIBRARY_PATH=/usr/local/lib/python3.9/dist-packages/jep/ 
    

RUN mkdir -p ${PKGTMPDIR} && cd ${PKGTMPDIR} \
    && apt-get update && apt-get install -y curl \
    && apt-get dist-upgrade -y \
    && curl -s -L https://download.bell-sw.com/pki/GPG-KEY-bellsoft | tee /etc/apt/trusted.gpg.d/bellsoft.asc \
    && echo "deb [arch=amd64] https://apt.bell-sw.com/ stable main" | tee /etc/apt/sources.list.d/bellsoft.list \
    && apt-get update \
    && apt-get install -y \
        bellsoft-java11-runtime \
        libsndfile1 mplayer \
        iproute2 iputils-ping \
        python3.9 python3.9-distutils python3-pip python3.9-dev python3-setuptools \
        unzip sudo jq patch \
    && update-alternatives --install /usr/bin/python python /usr/bin/python3.9 1 \
    && update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.9 1 \
    && python -m pip install pip --upgrade \
    && python -m pip install torch==1.12.1+cu116 torchvision==0.13.1+cu116 torchaudio==0.12.1 --extra-index-url https://download.pytorch.org/whl/cu116 \
    && python -m pip install huggingsound \
    && echo "#####################################" \
    && echo "Cleaning UP the container " \
    && echo "#####################################" \ 
    && apt-get remove -y python3-pip \
    && apt-get autoremove -y \
    && rm -rf /root/.cache/pip && rm -rf ${PKGTMPDIR}/* && apt-get clean && rm -rf /var/lib/apt/lists/*

RUN --mount=type=secret,id=ACTION_GH_TOKEN export ACTION_GH_TOKEN=$(cat /run/secrets/ACTION_GH_TOKEN) \
    && mkdir -p /opt/IPED/ && cd /opt/IPED/ \
    && if [ "${SNAPSHOT}" = "true" ]; \
        then \
            echo "#####################################" && \
            echo "Installing IPED from SNAPSHOT   " && \
            echo "#####################################" && \
            echo -n "Getting snapshot with run ID ${SNAPSHOT_WORKFLOW_ID}..." && \
            snapshotURL=$(curl -s -L -H "Accept: application/vnd.github+json" \
                            -H "Authorization: Bearer ${ACTION_GH_TOKEN}" \
                            -H "X-GitHub-Api-Version: 2022-11-28" \
                            https://api.github.com/repos/sepinf-inc/IPED/actions/artifacts  | \
                        jq --arg workflow_id $SNAPSHOT_WORKFLOW_ID -c '.artifacts[] | select(.workflow_run.id|tostring == $workflow_id) | .archive_download_url' | \
                        tr -d '\"') && \
            echo "Downloading ${snapshotURL}..." && \
            curl -L -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${ACTION_GH_TOKEN}" -H "X-GitHub-Api-Version: 2022-11-28" --output ${PKGTMPDIR}/iped.zip ${snapshotURL} && \
            unzip -p ${PKGTMPDIR}/iped.zip | tar -xvz --strip-components=1; \
        else \
            echo "#####################################" && \
            echo "Installing IPED from RELEASE " && \
            echo "#####################################" && \
            curl -L https://github.com/sepinf-inc/IPED/releases/download/$IPED_RELEASE_VERSION/IPED-${IPED_RELEASE_VERSION}_and_plugins.zip --output ${PKGTMPDIR}/iped.zip && \
            unzip ${PKGTMPDIR}/iped.zip ;\
        fi \
    && echo "Creating IPED simbolic link..." \
    && ls | grep "iped-" | xargs -i sh -c 'ln -s "{}" iped' \
    && echo "#####################################" \
    && echo "Configuring Local config with our default values" \
    && echo "#####################################" \
    && echo "If you need to change the IPED LocalConfig, use the environment variables available on /entrypoint.sh" \
    && echo "#####################################" \
    && sed -i -e "s/locale =.*/locale = pt-BR/" /opt/IPED/iped/LocalConfig.txt \
    && sed -i -e "s/indexTemp =.*/indexTemp = \/mnt\/ipedtmp/" /opt/IPED/iped/LocalConfig.txt \
    && sed -i -e "s/indexTempOnSSD =.*/indexTempOnSSD = true/" /opt/IPED/iped/LocalConfig.txt \
    && sed -i -e "s/outputOnSSD =.*/outputOnSSD = false/" /opt/IPED/iped/LocalConfig.txt \
    && sed -i -e "s/numThreads =.*/numThreads = 8/" /opt/IPED/iped/LocalConfig.txt \
    && sed -i -e "s/#hashesDB =.*/hashesDB = \/mnt\/hashesdb\/iped-hashes.db/" /opt/IPED/iped/LocalConfig.txt \
    && sed -i -e "s/#tskJarPath =.*/tskJarPath = \/opt\/IPED\/iped\/lib\/sleuthkit-4.12.0.p1.jar/" /opt/IPED/iped/LocalConfig.txt \
    && sed -i -e "s/mplayerPath =.*/mplayerPath = \/usr\/bin\/mplayer/" /opt/IPED/iped/LocalConfig.txt \
    && echo "#####################################" \
    && echo "Uncommenting a default huggingfaceModel to enable entrypoint value filling" \
    && echo "#####################################" \
    && sed -i -e "s/# huggingFaceModel = jonatasgrosman\/wav2vec2-xls-r-1b-portuguese/huggingFaceModel = jonatasgrosman\/wav2vec2-xls-r-1b-portuguese/" /opt/IPED/iped/conf/AudioTranscriptConfig.txt \
    && echo "#####################################" \
    && echo "Patching Wav2Vec2Process.py to use Enviroment Variable IPED_CUDA_MULTIPLIER" \
    && echo "#####################################" \
    && curl https://raw.githubusercontent.com/iped-docker/iped/master/resources/Wav2Vec2Process.py.patch --output ${PKGTMPDIR}/Wav2Vec2Process.py.patch \
    && patch /opt/IPED/iped/scripts/tasks/Wav2Vec2Process.py < ${PKGTMPDIR}/Wav2Vec2Process.py.patch \
    && echo "#####################################" \
    && echo "Cleaning UP the container " \
    && echo "#####################################" \    
    && rm -rf ${PKGTMPDIR}

WORKDIR /opt/IPED/iped
COPY entrypoint.sh /
ENTRYPOINT ["/entrypoint.sh"]
CMD ["/bin/bash"]
